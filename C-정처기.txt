#include <stdio.h>
void main(){
  float a = 7.9;
 
  printf("%f\n", a);
  printf("%.3f\n", a);
  printf("%6.2f\n", a);
 
}





#include <iostream>
using namespace std;
void main(){
  char a = 'A'
  int b = 7;
  
  cout << a << endl << b;
 
}





#include <stdio.h>
void ary(int a[]){
  int temp;
  for(int i=0;i<4;i++)	
    for(int j=0;j<4-i;j++)
      if(a[j]>a[j+1]){
        temp=a[j];
        a[j]=a[j+1];
        a[j+1]=temp;
      }
}
 int main() {
   int a[]={85, 75, 50, 100, 95};
   ary(a);
   for(int i=0;i<5;i++)
     printf("%d",a[i]);
}






#include <iostream>
print Value{
  a,
  b,
  c = 7,
  d
};  
 
void main(){
  print Value value;
  value = d;
  std::cout << value;  
}







#include <stdio.h>
struct stName {
    char nael[12];
    int os, db, hab, hhab;
};
int main() {
    struct stName st[3] = { {"stName1", 95, 88}, {"stName2", 84, 91}, {"stName3", 86, 75} };
    struct stName* p;
    p = &st[0];
 
    (p + 1)->hab = (p + 1)->os + (p + 2)->db;
    (p + 1)->hhab = (p + 1)->hab + p->os + p->db;
 
    printf("%d", (p + 1)->hab + (p + 1)->hhab);
}






#include <stdio.h>
void main(){
  int a[5] = {3,1};
  int i;
 
  for(i=0; i<5; i++)
    printf("%d\n", a[i]);
}






#include <stdio.h>
int main() {
    struct ary {
        char name[10];
        int age;
    } a[] = { {"Kim", 28}, {"Lee", 38}, {"Park", 42}, {"Choi", 31} };
 
    struct ary *p;
    p = a;
    p++;
    printf("%s\n", p->name);
    printf("%d\n", p->age);
}
출력 :






#include <stdio.h>
main(){
  char inputData [50];
  scanf("%s", inputData );
  printf("%.4s", inputData );
  printf("%3.2s", inputData );
}
입력 : Hello, World
출력 :
 







#include <stdio.h>
main(){
 
  float a = 3.45678f;
  double b = 0.0561214;
  (     )
  
출력 : [a]=3.46 / [b]=5.612e-02
괄호안에 입력은? (단, 한 개의 식으로 작성)










#include <stdio.h>
main(){
 
  int i, j;
  scanf("%o#x", &i, &j);
  printf(w"%d %d", i, j)
  
입력 : 15#22
출력은 ?
 
 
 
 
 
 
 
 #include <stdio.h>
 
int main() {
    int ary[3];
    int s = 0;
 
    *(ary + 0) = 1;					==> 
    ary[1] = *(ary + 0) + 2;		==> 
    ary[2] = *ary + 3;				==> 
 
    for (int i = 0; i < 3; i++)
        s = s + ary[i];				==> 
 
    printf("%d", s);				==> 
}
출력:






#include <stdio.h>
main(){
  int i = 5, j = 5, k = 20;
  i /= j;		
  j -= i;		
  k %= j;		
  printf("%d, %d, %d\n", i, j, k);

}
출력:





#include <stdio.h> 
#include <stdlib.h> 
struct node { 
	int p; 
	struct node* n; 
};
 
int main() { 
	struct node a = {1, NULL}; 
	struct node b = {2, NULL}; 
	struct node c = {3, NULL}; 
	
	a.n = &b; b.n = &c; c.n = NULL; 					
	c.n = &a; a.n = &b; b.n = NULL; 					
	struct node* head = &c; 
	printf("%d %d %d", head->p, head->n->p, head->n->n->p); 		
	return 0; 
}
출력: 





#include <stdio.h>
void main(){
	int i,j;
	int temp;
	int a[5] = {75,95,85,100,50};

	for(i=0; i<4; i++){	
		for(j=0; j<4-i; j++){
			if(a[j] > a[j+1]){			
				temp=a[j];
				a[j] = a[j+1];
				a[j+1] = temp;
			 }
		   }
		}
		
	for(i=0; i<5; i++){
		printf("%d", a[i]);
	}
}
출력 : 
  
  
  


https://chatgpt.com/c/68eee239-0314-8324-8deb-671124bca62c
#include <stdio.h> 
#include <stdlib.h>   
struct node {     
	char c;     
	struct node* p; 
};   

struct node* func(char* s) {     
	struct node* h = NULL, *n;          							
	while(*s) {         
		n = malloc(sizeof(struct node));         
		n->c = *s++;         
		n->p = h;         
		h = n;    
	}          
	return h; 
}   

int main() {     
	struct node* n = func("BEST");          
	while(n) {         						
		putchar(n->c);         				
		struct node* t = n;         
		n = n->p;         
		free(t);     
	}          
	return 0; 
}
			
	
	



int main(){
   int res;
   res = mp(2,10);
   printf("%d",res);
   return 0;
}
int mp(int base, int exp) {
   int res = 1;
   for(int i=0; i < exp; i++){
      res = res * base;							
   }
   return res;
}
출력 : 







int main(){
	int ary[3];
	int s = 0;
	*(ary+0)=1;						
	ary[1] = *(ary+0)+2;			
	ary[2] = *ary+3;				
	for(int i=0; i<3; i++){
	  s=s+ary[i]					
	}
	print("%d",s);
}
출력 : 





#include <stdio.h>
int main(){
	int *arr[3];								
	int a = 12, b = 24, c = 36;
	arr[0] = &a;								
	arr[1] = &b;
	arr[2] = &c;
	printf("%d\n", *arr[1] + **arr + 1);
}
출력 :





#include <stdio.h>
struct jsu {
  char name[12];
  int os, db, hab, hhab;
};
int main(){
	struct jsu st[3] = {{"데이터1", 95, 88}, 
						{"데이터2", 84, 91}, 
						{"데이터3", 86, 75}};
	struct jsu* p;
	p = &st[0];
	(p + 1)->hab = (p + 1)->os + (p + 2)->db;		
	(p + 1)->hhab = (p+1)->hab + p->os + p->db;		
	printf("%d\n", (p+1)->hab + (p+1)->hhab);		
}
출력 : 






#include <stdio.h>
int main() {
  int number = 1234;
  int div = 10;
  int result = 0;
  while (number ( 1 ) 0) {						
  
    result = result * div;							
    result = result + number ( 2 ) div;				
    number = number ( 3 ) div;						
  
  }
 
  printf("%d", result);
return 0;
}






#include <stdio.h> 
int isPrime(int number) { 
	int i; 
	for (i=2; i<number; i++) { 
		if (number % i == 0) return 0; 
	} 
	return 1; 
} 
int main(void) { 
	int number = 13195, max_div=0, i; 
	for (i=2; i<number; i++) 
		if (isPrime(i) == 1 && number % i == 0) max_div = i; 
	printf("%d", max_div); 
	return 0; 
}
출력 : 







#include <stdio.h>
int len(char *p);
int main(){
	char *p1 = "2022";
	char *p2 = "202207";  
	int a = len(p1);
	int b = len(p2);
	printf("%d", a + b);
}
int len(char *p){				
	int r = 0;
	while(*p != '\0'){
		p++;
		r++;
	}
	return r;
}
출력 : 






#include <stdio.h>
int main(int argc, char *argv[]) {
	int a[4] = {0, 2, 4, 8};
	int b[3] = {};
	int i = 1;
	int sum = 0;
	int *p1;
	for (i; i<4; i++) {
		p1 = a + i;						
		b[i-1] = *p1 - a[i-1];			
		sum = sum + b[i-1] + a[i];		
	}
	printf("%d", sum);
	return 0;
}
출력 : 






int n;
int k;
int s;
int el = 0;
  for(n=6; n<=30; n++){
    s=0;
    k=n/2;							
    for(int j=1; j<=k; j++){		
      if(n%j==0){				
        s=s+j;				
      }
    }
    if(s==n){					
		el++;						
    }
  }
  printf("%d", el);
  
  
  
  
  
  
#include <stdio.h>
int main(){
	int a[3][3] = {1,2,3,4,5,6,7,8,9};
	int *p = a[1]+2;					
	int *q = &a[0][1];									
	printf("%d", p[1]);					
	printf("%d", q[2]);					
	return 0;
}





#include <stdio.h>
int add(int i, int j) {
	return i+j;
}
int sub(int i, int j) {
	return i-j;
}
int main(){
	int(*pf)(int, int);
	___1___;
	printf("%d", pf(5,4));		
	___2___;
	printf("%d", pf(5,4));
	return 0;
}
출력결과 : 91







#include <stdio.h>
int main(){
	int a = 30, b = 15;
	printf("%d", a&b);			
	printf("%d", a|b);		
	return 0;
}




#include <stdio.h>
void main(){
	char *p = "KOREA"
    printf("%s\n" , p);				
    printf("%s\n" , p+3);			
    printf("%c\n" , *p);			
    printf("%c\n" , *(p+3));		
    printf("%c\n" , *p+2);
}

#include <stdio.h>
int main(){
	char a[6] = "hello";
	printf("%s", a+2);			
	printf("%c", a[1]+2);		
	printf("%c", *a+1);			
	printf("%c", *(a+1));		
	printf("%c", a[1]);			
	return 0
}

#include <stdio.h>
int main() {
    char arr[7] = "python";
    char ch = 'a';
    printf("%s\n", arr+3);			
    printf("%c\n", arr[2] + 2);
    printf("%c\n", *arr + 3);		
    printf("%c\n", *(arr+4));
    printf("%c\n", ch + 5);
    return 0;
}

★★★
#include <stdio.h>
#include <String.h>
int main(int argc, char *argv[]){
	char str1[11] = "ABCDE";
	char str2[6] = "12345";
	char* p1 = str1+1;			
	char* p2 = str2+3;			
	str1[1]=p2[-2];				
	str2[3]=p1[1];				
	strcat(str1, str2);			
	printf("%s", p1+2);			
	return 0;
}






#include <stdio.h>
struct p{
	char name;
	int s;
	int w;
	float p;
};
int main(){
	struct p x[3] = {{'A', 3, 2}, {'B', 10, 7}, {'C', 7, 3}};
	struct p temp;
	int i, j;
	for(i=0; i<3; i++)
		x[i].p = (x[i].w + x[i].s) / (float)(x[i].w);			
	for(i=0; i<2; i++){
		for(j=0; j<2-i; j++){
			if(x[j].p < x[j+1].p){								
				temp = x[j];
				x[j] = x[j+1];
				x[j+1] = temp;
			}
		}
	}
	for(i=0; i<3; i++)
		printf("%c", x[i].name);									
	return 0;
}






#include <stdio.h>
int Soojebi(int base, int exp) {
	int i, result = 1;
	for(i=0; i<exp; i++)
		result *= base;
	retirn result;
}
int main(){
	printf("%d", Soojebi(2,10));
	return 0;
}
출력 : 






#include <stdio.h>
int main() {
	int i, j;
	for(i=1; i<3; i++){
		for(j=1; j<=i; j++){
			switch((i+j)%2){
			case 0:
				printf("%d", i+j);
				break;
			case 1:
				printf("%d", i-j);
			}
		}
	}
	return 0;
}
출력 : 





★★★
#include <stdio.h>
void fn(int *a, int b){
	int temp = 0;
	temp = *a;					
	*a = b;						
	b = temp+1;					
}
int main(){
	int a = 10, b = 5;
	fn(&a, b);
	printf("%d %d\n", a, b);
	return 0;
}
출력 : 

#include <stdio.h>
char* fn*(char* p){
	p++;
	return p;
}
int main(){
	char a[] = "abcd";
	char* p = a;
	printf("%s\n", fn(p));
	printf("%s\n", p);
	return 0;
}
출력 : 







#include <stdio.h>
#include <String.h>
int main(){
	char f[6] = "549+*";
	char s[6] = "";
	int i, p = -1;
	for(i=0; i<strlen(f); i++){
		switch(f[i]){
		case '+':
			s[p-1] = s[p] + s[p-1];		
			p--;						
			break;
		case '*':
			s[p-1] = s[p] * s[p-1];		
			p--;						
			break;
		default:
			s[++p] = f[i] - '0';		

		}
	}
	printf("%c", s[0]);					
	return 0;
}
출력 : 





정수 1209의 각 자릿수의 합을 구하는 코드이다. 빈 칸에 들어갈 코드는? 
#include <stdio.h>
int main(){
	int x, t=0;
	for(x=1209; x_____0; x_____10){
		t+=x%10;
	}
	printf("%d", t);
	return 0;
}
출력결과 : 12







#include <stdio.h>
int main(){
	int i=2;
	int sum=0;
	for( ; i<4; ){
		switch(i%2){
		case 0:
			sum+=i;
		default:
			sum+=i;		
		}
		i+=3;			
	}
	printf("%d", sum);	
	return 0;
}
출력 :
		
		
		




#include <stdio.h>
int Soojebi(int num) {			
	int i;
	for(i=2; i<num; i++){		
		if(num % i == 0)			
			return 0;
	}
	return 1;
}
int main(){
	int num=7, cnt=0, i;
	for(i=2; i<num; i++)
		cnt += Soojebi(i);		
	printf("%d\n", cnt);
	return 0;
}
출력 : 